# saves it without quotation marks on the row names
#PART B
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
totalFeed <- apply(beren3$value [Feeds], beren3$age[Feeds], sum)
totalFeed <- tapply(beren3$value [Feeds], beren3$age[Feeds], sum)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
Feeds<-which(beren$event=="bottle")
Feeds <- which(beren$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
berenANOVA
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=avgFeed, lty=2, col="red")
abline(h=mean(totalFeed), lty=2, col="red")
abline(h=mean(totalFeed), lty=2, col="red")
abline(h=avgFeed, lty=2, col="red")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=avgFeed, lty=2, col="red")
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=avgFeed, lty=2, col="red")
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col="red")
abline(h=mean(totalFeed), lty=2, col="red")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col="red")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
setwd("C:\\Users\\yogur\\Desktop\\Evolution\\Tasks\\Task_02")
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")
# Ways to look at the object
length(Data)
nrow(Data)
ncol(Data)
colnames(Data)
head(Data)
Data[1,]
Data[2,]
Data[1:3]
Data[1:3, 4]
Data[1:5, 1:3]
Data[257, 1:3]
beren <- Data
#
Feeds <-which(Data[,9] == "bottle")
# Takes the info from column nine, asks which elements
# are "bottle, then stores those in a variable called
# "Feeds"
berenMilk <- beren[Feeds,]
#stores the "Feeds" query in "berenMilk"
head(berenMilk)
Feeds <- which(beren[, "event"] == "bottle")
# searches for a column called "event" and then
# displays those elements of "event" for which
# "bottle" is true, storing them in "Feeds"
Feeds <- which(beren$event == "bottle")
# same as before, but we use a dollar sign as our
# bracket-and-comma situation
dayID <- apply(beren, 1, function(x) paste (x[1:3], collapse="-"))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
beren$age <- dateID - dateID[beren$event == "birth"]
# searches the "event" column for "birth", then finds
# the date of that day, which it subtracts from the
# date of any given other event, thereby converting
# that difference into an age in days. This whole
# shebang gets stored in "beren$age".
head(beren)
beren2 <- beren
beren3 <- beren2[order(beren$age),]
# beren3 gets all the information from beren2, but
# arranged into an order; that is, the x (rows) are
# sorted by how old he was at the time of the row's
# occurrence. From what I can tell, that is.
head(beren)
head(beren2)
head(beren3)
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)
# makes a new .csv file out of our beren3 variable,
# saves it without quotation marks on the row names
# PART B
# Question 1:
# Hypothesis 1 doesn't work because we don't have his
# weight.
# Hypothesis 2 doesn't work because "a relationship"
# is meaningless.
Feeds <- which(beren$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
Feeds
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
setwd()
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("r02b-totalMilkByDay.pdf", height=4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
source("http://jonsmitchell.com/code/plotFxn02b.r")
source("http://jonsmitchell.com/code/plotFxn02b.r")
source("http://jonsmitchell.com/code/plotFxn02b.R")
pdf("confusing graph about Beren.pdf", height=4, width=4)
source("http://jonsmitchell.com/code/plotFxn02b.R")
pdf("r02b-cumulativeMilkByTime.pdf")
setwd("C:\\Users\\yogur\\Desktop\\Evolution\\Tasks\\Task_02")
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")
# Ways to look at the object
length(Data)
nrow(Data)
ncol(Data)
colnames(Data)
head(Data)
Data[1,]
Data[2,]
Data[1:3]
Data[1:3, 4]
Data[1:5, 1:3]
Data[257, 1:3]
beren <- Data
#
Feeds <-which(Data[,9] == "bottle")
# Takes the info from column nine, asks which elements
# are "bottle, then stores those in a variable called
# "Feeds"
berenMilk <- beren[Feeds,]
#stores the "Feeds" query in "berenMilk"
head(berenMilk)
Feeds <- which(beren[, "event"] == "bottle")
# searches for a column called "event" and then
# displays those elements of "event" for which
# "bottle" is true, storing them in "Feeds"
Feeds <- which(beren$event == "bottle")
# same as before, but we use a dollar sign as our
# bracket-and-comma situation
dayID <- apply(beren, 1, function(x) paste (x[1:3], collapse="-"))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
beren$age <- dateID - dateID[beren$event == "birth"]
# searches the "event" column for "birth", then finds
# the date of that day, which it subtracts from the
# date of any given other event, thereby converting
# that difference into an age in days. This whole
# shebang gets stored in "beren$age".
head(beren)
beren2 <- beren
beren3 <- beren2[order(beren$age),]
# beren3 gets all the information from beren2, but
# arranged into an order; that is, the x (rows) are
# sorted by how old he was at the time of the row's
# occurrence. From what I can tell, that is.
head(beren)
head(beren2)
head(beren3)
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)
# makes a new .csv file out of our beren3 variable,
# saves it without quotation marks on the row names
# PART B
# Question 1:
# Hypothesis 1 doesn't work because we don't have his
# weight.
# Hypothesis 2 doesn't work because "a relationship"
# is meaningless.
setwd()
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("r02b-totalMilkByDay.pdf", height=4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
# Question 2: There's no information given about
# actual consumption, just consumption while Beren
# is at daycare.
#Part C
setwd()
setwd()
beren3 <- read.csv("beren_new.csv", stringsAsFactors = F)
beren3 <- read.csv("beren_new.csv", stringsAsFactors = F)
bf <- beren[Feeds]
out <- glm(valuerange+caregiver, data=BF)
beren3
?glm
Data
FeedSlope <- beren[Feeds,]
which("caregiver")
View(FeedSlope)
Feeds <- which(beren3$event == "bottle")
bf <- beren[Feeds,]
View(FeedSlope)
bf
bf <- beren[, Feeds]
bf <- which(beren[Feeds], == "bottle")
beren3 <- read.csv("beren_new.csv", stringsAsFactors = F)
beren3 <- beren2[order(beren$age),]
setwd()
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("r02b-totalMilkByDay.pdf", height=4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
# Question 2: There's no information given about
# actual consumption, just consumption while Beren
# is at daycare.
#Part C
beren3 <- beren2[order(beren$age),]
# names the subset of Beren's data that we defined
# as feeds "bf"
bf <- beren[Feeds]
setwd("C:\\Users\\yogur\\Desktop\\Evolution\\Tasks\\Task_02")
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")
# Ways to look at the object
length(Data)
nrow(Data)
ncol(Data)
colnames(Data)
head(Data)
Data[1,]
Data[2,]
Data[1:3]
Data[1:3, 4]
Data[1:5, 1:3]
Data[257, 1:3]
beren <- Data
#
Feeds <-which(Data[,9] == "bottle")
# Takes the info from column nine, asks which elements
# are "bottle, then stores those in a variable called
# "Feeds"
berenMilk <- beren[Feeds,]
#stores the "Feeds" query in "berenMilk"
head(berenMilk)
Feeds <- which(beren[, "event"] == "bottle")
# searches for a column called "event" and then
# displays those elements of "event" for which
# "bottle" is true, storing them in "Feeds"
Feeds <- which(beren$event == "bottle")
# same as before, but we use a dollar sign as our
# bracket-and-comma situation
dayID <- apply(beren, 1, function(x) paste (x[1:3], collapse="-"))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
beren$age <- dateID - dateID[beren$event == "birth"]
# searches the "event" column for "birth", then finds
# the date of that day, which it subtracts from the
# date of any given other event, thereby converting
# that difference into an age in days. This whole
# shebang gets stored in "beren$age".
head(beren)
beren2 <- beren
beren3 <- beren2[order(beren$age),]
# beren3 gets all the information from beren2, but
# arranged into an order; that is, the x (rows) are
# sorted by how old he was at the time of the row's
# occurrence. From what I can tell, that is.
head(beren)
head(beren2)
head(beren3)
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)
# makes a new .csv file out of our beren3 variable,
# saves it without quotation marks on the row names
# PART B
# Question 1:
# Hypothesis 1 doesn't work because we don't have his
# weight.
# Hypothesis 2 doesn't work because "a relationship"
# is meaningless.
setwd()
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("r02b-totalMilkByDay.pdf", height=4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
# Question 2: There's no information given about
# actual consumption, just consumption while Beren
# is at daycare.
bf <- beren[Feeds,]
out <- glm(value+caregiver, data=bf)
bf
beren3
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")
Data
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")
Data
length(Data)
nrow(Data)
colnames(Data)
beren$caregiver
beren$events["bottle"]
beren$event["bottle"]
beren$event[bottle]
beren$event
Events <- beren$event
MilkDrunk <- Events["bottle"]
MilkDrunk
Feeds
beren[Feeds]
beren$Feeds
beren[Feeds,]
beren[bottle,]
Events[bottle]
Events[bottle,]
which(Data[1,] == Event
setwd("C:\\Users\\yogur\\Desktop\\Evolution\\Tasks\\Task_02")
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")
# Ways to look at the object
length(Data)
nrow(Data)
ncol(Data)
colnames(Data)
head(Data)
Data[1,]
Data[2,]
Data[1:3]
Data[1:3, 4]
Data[1:5, 1:3]
Data[257, 1:3]
beren <- Data
#
Feeds <-which(Data[,9] == "bottle")
# Takes the info from column nine, asks which elements
# are "bottle, then stores those in a variable called
# "Feeds"
berenMilk <- beren[Feeds,]
#stores the "Feeds" query in "berenMilk"
head(berenMilk)
Feeds <- which(beren[, "event"] == "bottle")
# searches for a column called "event" and then
# displays those elements of "event" for which
# "bottle" is true, storing them in "Feeds"
Feeds <- which(beren$event == "bottle")
# same as before, but we use a dollar sign as our
# bracket-and-comma situation
dayID <- apply(beren, 1, function(x) paste (x[1:3], collapse="-"))
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")
beren$age <- dateID - dateID[beren$event == "birth"]
# searches the "event" column for "birth", then finds
# the date of that day, which it subtracts from the
# date of any given other event, thereby converting
# that difference into an age in days. This whole
# shebang gets stored in "beren$age".
head(beren)
beren2 <- beren
beren3 <- beren2[order(beren$age),]
# beren3 gets all the information from beren2, but
# arranged into an order; that is, the x (rows) are
# sorted by how old he was at the time of the row's
# occurrence. From what I can tell, that is.
head(beren)
head(beren2)
head(beren3)
write.csv(beren3, "beren_new.csv", quote=F, row.names=FALSE)
# makes a new .csv file out of our beren3 variable,
# saves it without quotation marks on the row names
# PART B
# Question 1:
# Hypothesis 1 doesn't work because we don't have his
# weight.
# Hypothesis 2 doesn't work because "a relationship"
# is meaningless.
setwd()
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$value[Feeds])
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
numFeeds<- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot(beren3$value[Feeds] ~ beren$caregiver[Feeds], xlab="who gave the bottle", ylab = "amount of milk consumed (oz)")
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf("r02b-totalMilkByDay.pdf", height=4, width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
# Question 2: There's no information given about
# actual consumption, just consumption while Beren
# is at daycare.
#Part C
beren3 <- beren2[order(beren$age),]
Feeds <-which(Data[,9] == "bottle")
bf <- beren[Feeds,]
# names the subset of Beren's data that we defined
# as feeds "bf"
#> colnames(Data)
#[1] "ï..year"      "month"        "day"
#[4] "dotw"         "start_hour"   "start_minute"
#[7] "end_hour"     "end_minute"   "event"
#[10] "value"        "units"        "caregiver"
?plot
